# Listen address, should always include hostname or ip address and a port.
listen: "0.0.0.0:8081"
# Specify URL Prefix for all handlers
prefix: ""
# Specify if metrics are exported over HTTP and if they are available on the same address or not
# pprofEnabled controls if extra HTTP Handlers to profile and debug application will be available
expvar:
  enabled: true
  pprofEnabled: false
  listen: ""
# Controls headers that would be passed to the backend
headersToPass:
  - "X-Dashboard-Id"
  - "X-Grafana-Org-Id"
  - "X-Panel-Id"
headersToLog:
  - "X-Dashboard-Id"
  - "X-Grafana-Org-Id"
  - "X-Panel-Id"
# Specify custom function aliases.
#  This is example for alias "perMinute(metrics)" that will behave as "perSecond(metric)|scale(60)"
# define:
#   -
#     name: "perMinute"
#     template: "perSecond({{.argString}})|scale(60)"
# Control what status code will be returned where /render or find query do not return any metric
# Max concurrent requests to CarbonZipper
concurency: 4000
cache:
   # Type of caching. Valid: "mem", "memcache", "null"
   type: "mem"
   # Cache limit in megabytes
   size_mb: 1024
   # Default cache timeout value. Identical to DEFAULT_CACHE_DURATION in graphite-web.
   defaultTimeoutSec: 60
   # Only used by memcache type of cache. List of memcache servers.
# Amount of CPUs to use. 0 - unlimited
cpus: 0
backendCache:
   type: "mem"
   size_mb: 1024
   defaultTimeoutSec: 60
# Timezone, default - local
tz: ""

#functionsConfig:
#    graphiteWeb: ./graphiteWeb.example.yaml
maxBatchSize: 200
graphite:
    # Host:port where to send internal metrics
    # Empty = disabled
    host: "prod-devops-carbon-relay-ng.local"
    interval: "60s"
    prefix: "carbon.api"
    # rules on how to construct metric name. For now only {prefix} and {fqdn} is supported.
    # {prefix} will be replaced with the content of {prefix}
    # {fqdn} will be repalced with fqdn
    pattern: "{prefix}.{fqdn}"
# Maximium idle connections to carbonzipper
idleConnections: 10
pidFile: ""

upstreams:
    graphite09compat: false
    buckets: 10

    concurrencyLimitPerServer: 0
    keepAliveInterval: "30s"
    maxIdleConnsPerHost: 1000
    timeouts:
        find: "2s"
        render: "50s"
        connect: "200ms"
    backends:
      - "http://127.0.0.1:8080"

logger:
    - logger: ""
      file: "stderr"
      level: "info"
      encoding: "console"
      encodingTime: "iso8601"
      encodingDuration: "seconds"
